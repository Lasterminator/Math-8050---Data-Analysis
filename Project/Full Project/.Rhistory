rome_data <- my_data_filtered %>% subset(city_day=='rome_weekdays')
ggplot(data = rome_data, mapping = aes(x = lat, y = lng)) +
theme_minimal() +
scale_fill_identity() +
geom_point(mapping = aes(color = realSum), size = 3) +
ggtitle("") +
tema
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = metro_dist, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = metro_dist, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = metro_dist, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = metro_dist, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = dist, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = dist, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = dist, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = dist, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = attr_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = attr_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = attr_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = attr_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = attr_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4) +
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = attr_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = realSum, y = attr_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data, aes(x = realSum, y = attr_index, color = "Filtered Data"), alpha = 0.4)
ggpairs(my_data_filtered[c("realSum","dist","metro_dist"
,"attr_index_norm","rest_index_norm","city_day")], cardinality = 20, cardinality_threshold = 999)
ggpairs(my_data[c("realSum","dist","metro_dist"
,"attr_index_norm","rest_index_norm","city_day")], cardinality = 20, cardinality_threshold = 999)
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
cor(my_data$attr_index, my_data$rest_index)
# create empty table to store results
collinearity_table <- matrix(NA, nrow = ncol(my_data), ncol = ncol(my_data))
colnames(collinearity_table) <- colnames(my_data)
rownames(collinearity_table) <- colnames(my_data)
# loop through columns and calculate correlation coefficients
for (i in 1:(ncol(my_data)-1)) {
for (j in (i+1):ncol(my_data)) {
collinearity_table[i,j] <- round(cor(my_data[,i], my_data[,j]), 2)
}
}
cor(my_data$attr_index, my_data$rest_index)
cor(my_data$attr_index, my_data$rest_index)
cor(my_data$attr_index, my_data$rest_index)
cor(my_data$attr_index_norm, my_data$rest_index_norm)
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index, y = rest_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index, y = rest_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index, y = rest_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index, y = rest_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data, aes(x = attr_index, y = rest_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index, y = rest_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data, aes(x = attr_index, y = rest_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index, y = rest_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
cor(my_data$attr_index, my_data$rest_index)
cor(my_data$attr_index_norm, my_data$rest_index_norm)
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index_norm, y = rest_index_norm, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data, aes(x = attr_index_norm, y = rest_index_norm, color = "Filtered Data"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
cor(my_data$attr_index_norm, my_data$rest_index_norm)
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index, y = rest_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index, y = rest_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data_filtered, aes(x = attr_index, y = rest_index, color = "Filtered Data"), alpha = 0.4) +
geom_point(data = my_outliers, aes(x = attr_index, y = rest_index, color = "Outliers"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
ggplot() +
geom_point(data = my_data, aes(x = attr_index, y = rest_index, color = "Filtered Data"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red"))
ggplot() +
geom_point(data = my_data, aes(x = attr_index, y = rest_index, color = "Filtered Data"), alpha = 0.4) +
scale_color_manual(values = c("Filtered Data" = "blue", "Outliers" = "red")) +
facet_wrap(~city_day)
cor(my_data$room_type,my_data$room_shared)
cor(as.numeric(factor(my_data$room_type)), as.numeric(factor(my_data$room_shared)))
cor(as.numeric(factor(my_data$room_private)), as.numeric(factor(my_data$room_shared)))
cor(as.numeric(factor(my_data$room_type)), as.numeric(factor(my_data$room_shared)))
print(unique(my_data[my_data$room_shared == my_data$room_private, ]$room_type)) # if the room is shared
# summary(my_data)
print(unique(my_data[my_data$room_private=='False', ]$room_type))
print(unique(my_data[my_data$room_shared=='True', ]$room_type))
print(unique(my_data[my_data$room_shared=='False', ]$room_type))
print(unique(my_data[my_data$room_shared == my_data$room_private, ]$room_type)) # if the room is shared
# summary(my_data)
print(unique(my_data[my_data$room_private=='False', ]$room_type))
print(unique(my_data[my_data$room_shared=='True', ]$room_type))
print(unique(my_data[my_data$room_shared=='False', ]$room_type))
my_data = select(my_data, -c(room_shared, room_private))
head(my_data)
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, bins = 20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, bins = 10) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=100) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=10) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = person_capacity, group = person_capacity)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = room_type, group = room_type)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = host_is_superhost, group = host_is_superhost)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = host_is_superhost, group = host_is_superhost)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = host_is_superhost, group = host_is_superhost)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = host_is_superhost, group = host_is_superhost)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = host_is_superhost, group = host_is_superhost)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = host_is_superhost, group = cleanliness_rating)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = host_is_superhost, group = host_is_superhost)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = host_is_superhost, group = host_is_superhost)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = host_is_superhost, group = host_is_superhost)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = multi, group = multi)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = multi, group = multi)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = multi, group = multi)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = biz, group = biz)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = biz, group = biz)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = biz, group = biz)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
cor(as.numeric(factor(my_data$multi)), as.numeric(factor(my_data$biz)))
ggplot(my_data, aes(x = realSum, fill = cleanliness_rating, group = cleanliness_rating)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = cleanliness_rating, group = cleanliness_rating)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = cleanliness_rating, group = cleanliness_rating)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data_filtered, aes(x = realSum, y = guest_satisfaction_overall, color = city_day)) +
geom_point() +
xlab("Price") +
ylab("Guest Satisfaction Overall") +
scale_color_discrete(name = "City-Day")
ggplot(my_data_filtered, aes(x = realSum, y = guest_satisfaction_overall, color = city_day)) +
geom_point() +
xlab("Price") +
ylab("Guest Satisfaction Overall") +
scale_color_discrete(name = "City-Day")
ggplot(my_data_filtered, aes(x = realSum, y = guest_satisfaction_overall, color = city_day)) +
geom_point() +
xlab("Price") +
ylab("Guest Satisfaction Overall") +
scale_color_discrete(name = "City-Day") + facet_wrap(~city_day)
ggplot(my_data_filtered, aes(x = realSum, y = guest_satisfaction_overall, color = city_day)) +
geom_point() +
xlab("Price") +
ylab("Guest Satisfaction Overall") +
scale_color_discrete(name = "City-Day")
ggplot(my_data_filtered, aes(x = realSum, y = guest_satisfaction_overall, color = city_day)) +
geom_point() +
xlab("Price") +
ylab("Guest Satisfaction Overall") +
scale_color_discrete(name = "City-Day") + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = cleanliness_rating, group = bedrooms)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = cleanliness_rating, group = bedrooms)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = cleanliness_rating, group = bedrooms)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.5, nbins=20) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.5) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.5) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.5) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_density(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_density(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_density(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(my_data, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))
ggplot(my_data_filtered, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_histogram(alpha = 0.6) +
theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) + facet_wrap(~city_day)
ggplot(df, aes(x = x, y = y)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "My Bar Plot", x = "Category", y = "Value") +
theme_minimal() +
scale_x_discrete(limits = c("A", "B", "C")) +
scale_y_continuous(limits = c(0, 25), expand = c(0, 0))
ggplot(my_data, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_bar( fill = "steelblue") +
labs(title = "My Bar Plot", x = "Category", y = "Value") +
theme_minimal() +
scale_x_discrete(limits = c("A", "B", "C")) +
scale_y_continuous(limits = c(0, 25), expand = c(0, 0))
ggplot(my_data, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_bar( fill = "steelblue") +
ggplot(my_data, aes(x = realSum, fill = bedrooms, group = bedrooms)) +
geom_bar( fill = "steelblue")
ggplot(my_data, aes(x = realSum, y = bedrooms)) +
geom_bar( fill = "steelblue")
ggplot(my_data, aes(x = realSum, y = bedrooms)) +
geom_bar( stat = "realSum")
ggplot(my_data, aes(x = realSum, y = bedrooms)) +
geom_bar( stat = "bedrooms")
ggplot(my_data, aes(x = realSum, y = bedrooms)) +
geom_boxplot( stat = "bedrooms")
ggplot(my_data, aes(x = realSum, y = bedrooms)) +
geom_boxplot()
ggplot(my_data, aes(x = bedrooms, y = realSum)) +
geom_boxplot()
ggplot(my_data_filtered, aes(x = reorder(city_day, guest_satisfaction_overall, FUN=median), y = guest_satisfaction_overall, fill = city_day)) +
geom_boxplot() +
coord_flip() +
theme(legend.key.height = unit(0.5, "cm"),
legend.key.size = unit(1, "lines"))
ggplot(my_data_filtered, aes(x = reorder(city_day, bedrooms, FUN=median), y = bedrooms, fill = city_day)) +
geom_boxplot() +
coord_flip() +
theme(legend.key.height = unit(0.5, "cm"),
legend.key.size = unit(1, "lines"))
ggplot(my_data_filtered, aes(x = reorder(city_day, bedrooms, FUN=median), y = bedrooms)) +
geom_boxplot() +
coord_flip() +
theme(legend.key.height = unit(0.5, "cm"),
legend.key.size = unit(1, "lines"))
ggplot(my_data_filtered, aes(x = reorder(city_day, bedrooms, FUN=median), y = bedrooms, fill = city_day)) +
geom_boxplot() +
coord_flip() +
theme(legend.key.height = unit(0.5, "cm"),
legend.key.size = unit(1, "lines"))
ggplot(my_data_filtered, aes(x = reorder(city_day, bedrooms, FUN=median), y = bedrooms, fill = city_day)) +
geom_boxplot() +
coord_flip() +
theme(legend.key.height = unit(0.5, "cm"),
legend.key.size = unit(1, "lines"))
