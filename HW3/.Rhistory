library(formatR)
library(tidyverse)
library(GGally)
library(ggfortify)
library(nycflights13)
library(modelr)
library(magick)
library(haven)
library(dplyr)
library(ISLR)
library(lubridate)
library(ggplot2)
library(nycflights13)
library(knitr)
knitr::opts_chunk$set(width = 60, warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=60),tidy=TRUE, echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
# Create flights.sm
flights.sm <- select(flights, arr_delay, dep_delay, sched_dep_time, distance, air_time)
# Create flights.sm.AA
flights.sm.AA <- select(flights, arr_delay, dep_delay, sched_dep_time, distance, air_time, carrier) %>%
filter(carrier == "AA") %>%
select(-carrier)
flights.sm
flights.sm.AA
# Summary and ggpairs for full dataset
summary(flights)
ggpairs(flights)
# Summary and ggpairs for flights.sm
summary(flights.sm)
ggpairs(flights.sm)
gc()
library(formatR)
library(tidyverse)
library(GGally)
library(ggfortify)
library(nycflights13)
library(modelr)
library(magick)
library(haven)
library(dplyr)
library(ISLR)
library(lubridate)
library(ggplot2)
library(nycflights13)
library(knitr)
knitr::opts_chunk$set(width = 60, warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=60),tidy=TRUE, echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
# Create flights.sm
flights.sm <- select(flights, arr_delay, dep_delay, sched_dep_time, distance, air_time)
# Create flights.sm.AA
flights.sm.AA <- select(flights, arr_delay, dep_delay, sched_dep_time, distance, air_time, carrier) %>%
filter(carrier == "AA") %>%
select(-carrier)
# Summary and ggpairs for flights.sm
summary(flights.sm)
ggpairs(flights.sm)
# Summary and ggpairs for flights.sm.AA
summary(flights.sm.AA)
ggpairs(flights.sm.AA)
# Split data into training and test sets for full dataset
set.seed(123)
flights_split <- resample(flights, c(train = 0.8, test = 0.2))
library(formatR)
library(tidyverse)
library(GGally)
library(ggfortify)
library(nycflights13)
library(modelr)
library(magick)
library(haven)
library(dplyr)
library(formatR)
library(tidyverse)
library(GGally)
library(ggfortify)
library(nycflights13)
library(modelr)
library(magick)
library(haven)
library(dplyr)
library(formatR)
library(tidyverse)
library(GGally)
library(ggfortify)
library(nycflights13)
library(modelr)
library(magick)
library(haven)
library(dplyr)
restartSession()
library(formatR)
library(tidyverse)
library(GGally)
library(ggfortify)
library(nycflights13)
library(modelr)
library(magick)
library(haven)
library(dplyr)
library(formatR)
library(tidyverse)
library(GGally)
library(ggfortify)
library(nycflights13)
library(modelr)
library(magick)
library(haven)
library(dplyr)
# unload packages that depend on dplyr
detach("package:ggfortify", unload = TRUE)
detach("package:GGally", unload = TRUE)
detach("package:dbplyr", unload = TRUE)
